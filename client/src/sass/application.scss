@use 'sass:math';
@use 'sass:color';
@use '_variables' as *;
@use '_bootstrap-variables' as *;
@use '_mixins' as *;
@use '_icons' as *;
@use '_fonts';
@use './custom-markup';
@use './bootstrap';
@use './primeng-custom';
@use './z-index';
@use './class-helpers/index.scss';

/* clears the ‘X’ from Chrome */
input[type="search"]::-webkit-search-decoration,
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-results-button,
input[type="search"]::-webkit-search-results-decoration { display: none; }

body {
  // ---------------------------------------------------------------------------
  // New theme with fallback
  // ---------------------------------------------------------------------------

  --menu-bg: var(--menuBackgroundColor);
  --menu-fg: var(--menuForegroundColor);

  --fg: var(--mainForegroundColor, #000);
  --fg-300: var(--greyForegroundColor, 0); // 0 means undefined

  --bg: var(--mainBackgroundColor, #fff);
  --bg-secondary: var(--greyBackgroundColor, #E5E5E5);

  --primary: var(--mainColor, hsl(24, 90%, 45%));
  --on-primary: #{pvar(--fg)};

  --red: #{$red};
  --on-red: #{$white};

  --green: #{$green};

  --input-fg: var(--inputForegroundColor, #{pvar(--fg)});
  --input-bg: var(--inputBackgroundColor, #{pvar(--bg-secondary-400)});
  --input-placeholder: var(--inputPlaceholderColor, #{pvar(--fg-50)});
  --input-border-color: var(--inputBorderColor, #{pvar(--bg-secondary-500)});

  --textarea-fg: var(--textareaForegroundColor, #{pvar(--input-fg)});
  --textarea-bg: var(--textareaBackgroundColor, #{pvar(--input-bg)});

  --channel-bg: var(--channelBackgroundColor, #{pvar(--primary-50)});

  --support-btn-fg: var(--supportButtonColor, #{pvar(--fg-300)});
  --support-btn-bg: var(--supportButtonBackgroundColor, transparent);
  --support-btn-heart-bg: var(--supportButtonHeartColor, #{$support-button-heart});

  --x-margin-content: 2rem;
  --x-videos-margin-content: 2rem;
  --main-col-width: calc(100vw - #{$menu-width});

  --secondary-icon-color: #{pvar(--fg-50)};
  --secondary-fg: #{pvar(--fg-50)};

  // Light theme
  &[data-pt-theme=peertube-core-light],
  &[data-pt-theme=default] {
    --is-dark: 0;

    --primary: #F2690D;

    --fg: hsl(0 14% 2%);

    --bg: hsl(0 10% 96%);
    --bg-secondary: hsl(0 10% 76%);

    --secondary-icon-color: #8F7676;
    --input-placeholder: #8F7676;
  }

  // Brown
  &[data-pt-theme=peertube-core-dark] {
    --is-dark: 1;

    --primary: #FD9C50;
    --on-primary: #111;

    --fg: hsl(0 10% 96%);

    --bg: hsl(0 14% 7%);
    --bg-secondary: hsl(0 14% 22%);
  }

  & {
    font-family: $main-fonts;
    font-weight: $font-regular;
    color: pvar(--fg);
    background-color: pvar(--bg);

    // On desktop browsers, make sure vertical scroll bar is always visible
    // Allow to disable the scrollbar instead of hide it when the content fit the body
    // And not move the content and header horizontally sticked to right when the content is updating
    overflow-y: scroll;

    // Fix "reboot" style that set text-align: left
    text-align: start;
  }
}

::selection {
  color: pvar(--bg);
  background-color: pvar(--primary-450);
}

// Force to override bootstrap utilities
body [hidden] {
  display: none !important;
}

noscript,
#incompatible-browser {
  display: block;
  font-size: 1.2rem;
  max-width: 600px;
  margin: 1rem auto;
}

a {
  text-decoration: none;
}

strong {
  font-weight: $font-semibold;
}

input[readonly] {
  // Force blank on readonly inputs
  background-color: pvar(--input-bg) !important;
}

input,
textarea {
  color: pvar(--input-fg);

  @include disable-outline;
}

button {
  background: unset;
  color: pvar(--fg);

  @include disable-outline;
}

label {
  font-weight: $font-bold;
  margin-bottom: 0.5rem;
}

code {
  background-color: pvar(--bg-secondary-350);
  color: pvar(--fg-400);
  border-radius: 3px;
  padding: .2em .4em;
  margin: auto .4em;
  font-size: 75%;
  display: inline-block;
  vertical-align: middle;
}

.main-col {
  // Don't use rfs to get exact pixels
  margin-inline-start: $menu-width;

  width: calc(100% - #{$menu-width});
  outline: none;

  .margin-content {
    margin: 0 pvar(--x-margin-content);
    flex-grow: 1;
  }

  .revert-margin-content {
    margin: 0 calc(#{pvar(--x-margin-content)} * -1);
  }

  .sub-menu {
    background-color: pvar(--bg-secondary-400);
    width: 100%;
    display: flex;
    align-items: center;
    padding: 0 pvar(--x-margin-content);
    height: $sub-menu-height;
    margin-bottom: $sub-menu-margin-bottom;
    overflow-x: auto;

    &.sub-menu-fixed {
      position: fixed;
      z-index: #{z('sub-menu') - 1};
      max-width: pvar(--main-col-width);
    }
  }

  .skip-to-content-sub-menu {
    display: block;
    z-index: z(modal);
    padding: 1rem;
    background: pvar(--bg);
    text-align: center;
    text-decoration: underline;
  }

  // Use an appropriate offset top when sub-menu fixed
  .sub-menu-offset-content {
    padding-top: $sub-menu-height + $sub-menu-margin-bottom;
  }

  .sub-menu.mb-0 + .sub-menu-offset-content {
    padding-top: $sub-menu-height;
  }

  // Override some properties if the main content is expanded (no menu on the left)
  &.expanded {
    --main-col-width: 100vw;

    width: calc(100% - #{$collapsed-menu-width});

    @include margin-left($collapsed-menu-width);
  }

  &.lock-scroll .main-row > router-outlet + * {  /* stylelint-disable-line selector-max-compound-selectors */
    // Lock and hide body scrollbars
    position: fixed;

    // Lock and hide sub-menu scrollbars
    .sub-menu { /* stylelint-disable-line */
      overflow-x: hidden;
    }
  }
}

my-global-icon[iconName=external-link] {
  margin: 0 0.3em;
  width: 0.9em;
  height: 0.9em;
  line-height: 0.9em;
  display: inline-block;
  color: pvar(--secondary-icon-color);
  position: relative;
  top: -0.1em;
}

@media screen and (max-width: #{breakpoint(xl)}) {
  /* the following applies from 500px to 900px and is partially overridden from 500px to 800px by changes below to $small-view */
  .main-col,
  .main-col.expanded {
    .sub-menu {
      padding: 0 50px;

      .title-page {
        font-size: 17px;
      }
    }
  }
}

@media screen and (min-width: $mobile-view) and (max-width: $small-view) {
  .main-col {
    width: 100%;
  }
}

@media screen and (max-width: $small-view) {
  .main-col,
  .main-col.expanded {
    --x-margin-content: 15px;

    @include margin-left(0);

    .sub-menu {
      width: 100vw;
      padding: 0 15px;
      margin-bottom: $sub-menu-margin-bottom-small-view;
      overflow-x: auto;
    }

    // Use an appropriate offset top when sub-menu fixed
    .sub-menu-offset-content {
      padding-top: $sub-menu-height + $sub-menu-margin-bottom-small-view;
    }

    my-markdown-textarea {
      .root {
        max-width: 100% !important;
      }
    }

    input[type=text],
    input[type=password],
    input[type=email],
    textarea,
    .peertube-select-container {
      flex-grow: 1;
    }

    .caption input[type=text] {
      width: unset !important;
      flex-grow: 1;
    }
  }
}

ngx-loading-bar {
  .ngx-bar {
    height: 3px !important;
    border-radius: 0 !important;
    border-start-end-radius: 6px !important;
    border-end-end-radius: 6px !important;
  }
}
